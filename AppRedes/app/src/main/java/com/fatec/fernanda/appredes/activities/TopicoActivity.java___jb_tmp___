package com.fatec.fernanda.appredes.activities;

import android.content.Intent;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Html;
import android.view.View;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.fatec.fernanda.appredes.R;
import com.fatec.fernanda.appredes.models.Topico;
import com.firebase.client.Firebase;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.common.primitives.Bytes;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.storage.FileDownloadTask;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class TopicoActivity extends AppCompatActivity {

    Topico topico;
    String tituloTopico;
    int idTopico;
    int idConteudo;

    TextView txtTituloTopico;

    TextView txtTopico1;
    ImageView imgTopico1;
    TextView txtTopico2;
    ImageView imgTopico2;
    TextView txtTopico3;
    ImageView imgTopico3;

    Button btnConcluirTopico;

    DatabaseReference topicoRef;
    DatabaseReference usuarioRef;

    String uIdUsuario;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_topico);

        txtTituloTopico = (TextView) findViewById(R.id.txtTituloTopico);

        txtTopico1 = (TextView) findViewById(R.id.txtTopico1);
        imgTopico1 = (ImageView) findViewById(R.id.imgTopico1);

        txtTopico2 = (TextView) findViewById(R.id.txtTopico2);
        imgTopico2 = (ImageView) findViewById(R.id.imgTopico2);

        txtTopico3 = (TextView) findViewById(R.id.txtTopico2);
        imgTopico3 = (ImageView) findViewById(R.id.imgTopico3);

        btnConcluirTopico = (Button) findViewById(R.id.btnConcluirTopico);

        topicoRef = FirebaseDatabase.getInstance().getReference().child("topicos");

        //RECEBENDO O ID/NOME DO TOPICO
        Intent originIntent = getIntent();
        idTopico = originIntent.getExtras().getInt("idTopico");
        tituloTopico = originIntent.getExtras().getString("tituloTopico");

        topico = new Topico();
        topico.setId(idTopico);
        topico.setTitulo(tituloTopico);


        //RECEBENDO ID DO CONTEUDO
        idConteudo = originIntent.getExtras().getInt("idConteudo");


        //TODO Antes de carregar o topico, ver se o usuário já não concluiu esse topico. Se já concluiu, desabilitar o botão
        uIdUsuario = FirebaseAuth.getInstance().getCurrentUser().getUid();

        usuarioRef = FirebaseDatabase.getInstance().getReference().child("usuarios").child(uIdUsuario);

        usuarioRef.child("topicosConcluidos").child("conteudo" + idConteudo).addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(DataSnapshot dataSnapshot, String s) {

                //TODO se terminou o topico em questão
                if (dataSnapshot.child("topico" + idTopico).exists()) {
                    invalidaBotao();
                }
            }

            @Override
            public void onChildChanged(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onChildRemoved(DataSnapshot dataSnapshot) {

            }

            @Override
            public void onChildMoved(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onCancelled(DatabaseError databaseError) {

            }
        });


        //POSICIONA PARA A ÁREA DO TOPICO NO BANCO
        topicoRef = topicoRef.child("topico" + idTopico).child("texto");

        System.out.println("topico" + idTopico);

        //PEGANDO TEXTO PELO ARQUIVO HTML @ FIREBASE STORAGE
        FirebaseStorage storage = FirebaseStorage.getInstance();
        StorageReference storageRef = storage.getReferenceFromUrl("gs://appredes-a8895.appspot.com");

        StorageReference topicoParte1Ref;
        StorageReference topicoParte2Ref;
        StorageReference topicoParte3Ref;

        StorageReference imgParte1Ref;
        StorageReference imgParte2Ref;
        StorageReference imgParte3Ref;

        storageRef = storageRef.child("conteudos").child("conteudo" + idConteudo).child("topico" + idTopico);

        topicoParte1Ref = storageRef.child("topico" + idTopico + "-1.html");
        topicoParte2Ref = storageRef.child("topico" + idTopico + "-2.html");
        topicoParte3Ref = storageRef.child("topico" + idTopico + "-3.html");

        imgParte1Ref = storageRef.child("img1.png");
        imgParte2Ref = storageRef.child("img2.png");
        imgParte3Ref = storageRef.child("img3.png");


        File arquivoParte1 = null;
        File arquivoParte2 = null;
        File arquivoParte3 = null;


        try {
            //ARQUIVO TEMPORARIO QUE RECEBERÁ O HTML
            arquivoParte1 = File.createTempFile("topico" + idTopico, "html");
            final File finalArquivoTopico = arquivoParte1;

            //PEGANDO CONTEUDO DA REFERENCIA E ADICIONANDO AO ARQUIVO TEMPORARIO
            topicoParte1Ref.getFile(finalArquivoTopico).addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                @Override
                public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {

                    StringBuilder text = new StringBuilder();

                    try {
                        BufferedReader br = new BufferedReader(new FileReader(finalArquivoTopico));
                        String line;

                        while ((line = br.readLine()) != null) {
                            text.append(line);
                            text.append('\n');
                        }
                        br.close();
                    } catch (IOException e) {
                        //You'll need to add proper error handling here
                    }

                    txtTopico1.setText(Html.fromHtml(text.toString()));
                }
            });

            //PEGANDO CONTEUDO DA REFERENCIA E ADICIONANDO AO ARQUIVO TEMPORARIO
            topicoParte2Ref.getFile(finalArquivoTopico).addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                @Override
                public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {

                    StringBuilder text = new StringBuilder();

                    try {
                        BufferedReader br = new BufferedReader(new FileReader(finalArquivoTopico));
                        String line;

                        while ((line = br.readLine()) != null) {
                            text.append(line);
                            text.append('\n');
                        }
                        br.close();
                    } catch (IOException e) {
                        //You'll need to add proper error handling here
                    }

                    txtTopico2.setText(Html.fromHtml(text.toString()));
                }
            });

            //PEGANDO CONTEUDO DA REFERENCIA E ADICIONANDO AO ARQUIVO TEMPORARIO
            topicoParte3Ref.getFile(finalArquivoTopico).addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                @Override
                public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {

                    StringBuilder text = new StringBuilder();

                    try {
                        BufferedReader br = new BufferedReader(new FileReader(finalArquivoTopico));
                        String line;

                        while ((line = br.readLine()) != null) {
                            text.append(line);
                            text.append('\n');
                        }
                        br.close();
                    } catch (IOException e) {
                        //You'll need to add proper error handling here
                    }

                    txtTopico3.setText(Html.fromHtml(text.toString()));
                }
            });


        } catch (IOException e) {
            e.printStackTrace();
        }


        //CONCLUIR TOPICO
        btnConcluirTopico.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                final Long[] stringProgUsuario = new Long[1];

                usuarioRef = FirebaseDatabase.getInstance().getReference().child("usuarios").child(uIdUsuario);

                usuarioRef.child("topicosConcluidos").child("conteudo" + idConteudo).child("topico" + idTopico).setValue(true);


                usuarioRef.child("progresso").addValueEventListener(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        stringProgUsuario[0] = dataSnapshot.getValue(Long.class);
                        usuarioRef.child("progresso").removeEventListener(this);

                        int novoProgresso = stringProgUsuario[0].intValue();
                        novoProgresso = novoProgresso + 10;

                        usuarioRef.child("progresso").setValue(novoProgresso);

                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {

                    }
                });


                invalidaBotao();
            }
        });
    }

    private void invalidaBotao() {
        btnConcluirTopico.setEnabled(false);
        btnConcluirTopico.setText("Tópico Concluído");
        btnConcluirTopico.setBackgroundColor(getResources().getColor(R.color.buttonUnenable));
    }
}
